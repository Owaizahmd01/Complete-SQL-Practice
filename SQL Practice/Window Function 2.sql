CREATE DATABASE  WINDOW_KING;
USE WINDOW_KING;

CREATE TABLE IF NOT EXISTS WINDOW_ONE(
EMP_ID   INT,
EMP_NAME VARCHAR(30),
DEPARTMENT_ID INT,
SALARY   INT);

INSERT INTO WINDOW_ONE VALUES (1, 'ANKIT', 100, 10000),
(2,	'Mohit'	,100,	15000),
(3,	'Vikas'	,100,	10000),
(4,	'RohiI'	,100,	5000),
(5,	'Mudil'	,200,	12000),
(6,	'Agam'	,200,	12000),
(7,	'Sanjay',200,	9000),
(8,	'Ashish',200,	5000);

SELECT * FROM WINDOW_ONE;

SELECT DEPARTMENT_ID, MIN(SALARY) FROM WINDOW_ONE GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID, MAX(SALARY) FROM WINDOW_ONE GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID, AVG(SALARY) FROM WINDOW_ONE GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID, SUM(SALARY) FROM WINDOW_ONE GROUP BY DEPARTMENT_ID;

# MANAGER ASK TO COUNT TOTAL EMP_ID THEN,

SELECT COUNT(EMP_ID) AS EMPLOYEE_ID FROM WINDOW_ONE GROUP BY DEPARTMENT_ID;

# IF MANAGER ASK DATA WITHOUT DUPLICATE

INSERT INTO WINDOW_ONE VALUES
 (9,	'Mohit'	,100,	15000),
(9,	'Vikas'	,100,	10000);

INSERT INTO WINDOW_ONE VALUES
 (10,	'Mohit'	,100,	15000),
 (10,	'Mohit'	,101,	1500);
 
SELECT * FROM WINDOW_ONE;

SELECT SALARY,COUNT(DISTINCT EMP_ID) FROM WINDOW_ONE GROUP BY SALARY;

SELECT SALARY,EMP_NAME,EMP_ID, COUNT(DISTINCT EMP_NAME) FROM WINDOW_ONE GROUP BY EMP_ID;

-- # NOW USING SOME APPEND OPERATIONS 
-- (3,1)  -- WHICH IS BASICALLY , ROW 4 OF 3 COZ, IT START 0,  4 ROW WILL EXECUTE, 
-- (3,2)  -- IF I'M USING 2 , IT GIVES TWO RECORDS OF DATA WHICH IS 4 AND 5 ROW.

SELECT * FROM WINDOW_ONE WHERE SALARY >5000 ORDER BY EMP_ID  ASC LIMIT 3,2;

SELECT * FROM WINDOW_ONE WHERE DEPARTMENT_ID = 100 ORDER BY SALARY  ASC LIMIT 2,1;

SELECT * FROM WINDOW_ONE;

-- DUPLICATE IDENTIFICATION CODE IN MYSQL
SELECT *, COUNT(*) AS DUPLICATE FROM WINDOW_ONE
GROUP BY EMP_ID
HAVING COUNT(*)>1;

DELETE FROM WINDOW_ONE WHERE EMP_ID = 9; 
DELETE FROM WINDOW_ONE WHERE EMP_ID = 10; 

SELECT * FROM WINDOW_ONE;

SELECT EMP_ID, EMP_NAME, DEPARTMENT_ID, SALARY FROM WINDOW_ONE;


## RANK , DENSE_RANK & ROW_NUMBER
SELECT DEPARTMENT_ID, SALARY, 
RANK() OVER(ORDER BY(SALARY)) AS RNK,
DENSE_RANK() OVER(ORDER BY(SALARY)) AS DEN_RNK,
ROW_NUMBER() OVER(ORDER BY(SALARY)) AS ROW_NUM FROM WINDOW_ONE;

## PARTITION --> WHICH SEPERATE BY requirements
SELECT DEPARTMENT_ID , SALARY,
RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY) AS RNK,
DENSE_RANK() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY) AS DEN_RNK,
ROW_NUMBER() OVER(PARTITION BY DEPARTMENT_ID ORDER BY SALARY) AS ROW_NUM FROM WINDOW_ONE;
































